using DAL.Entities;
using System;
using System.Collections.Generic;
using System.Linq;
using System.Windows;

namespace SchoolHealthWPF.AdminPages
{
    /// <summary>
    /// Interaction logic for UserManagement.xaml
    /// </summary>
    public partial class UserManagement : Window
    {
        private List<UserAccount> users;

        public UserManagement()
        {
            InitializeComponent();
            Loaded += UserManagement_Loaded;
        }

        private void UserManagement_Loaded(object sender, RoutedEventArgs e)
        {
            LoadUsers();
        }

        private void LoadUsers()
        {
            using (var context = new StudentHealthManagementContext())
            {
                users = context.UserAccounts
                    .Where(u => u.Role != "Admin")
                    .ToList();
            }
            UserDataGrid.ItemsSource = users;
        }

        private void AddUser_Click(object sender, RoutedEventArgs e)
        {
            var addUserWindow = new AddUserWindow
            {
                Owner = this
            };
            if (addUserWindow.ShowDialog() == true)
            {
                using (var context = new StudentHealthManagementContext())
                {
                    var newUser = new UserAccount
                    {
                        Username = addUserWindow.Username,
                        PasswordHash = addUserWindow.Password, // You should hash the password here!
                        Role = addUserWindow.Role
                        // AccountId will be generated by the database
                    };

                    context.UserAccounts.Add(newUser);
                    context.SaveChanges();
                }
                LoadUsers();
            }
        }

        private void EditUser_Click(object sender, RoutedEventArgs e)
        {
            var selectedUser = UserDataGrid.SelectedItem as UserAccount;
            if (selectedUser == null)
            {
                MessageBox.Show("Please select a user to edit.");
                return;
            }

            var editUserWindow = new EditUserWindow(selectedUser)
            {
                Owner = this
            };
            if (editUserWindow.ShowDialog() == true)
            {
                using (var context = new StudentHealthManagementContext())
                {
                    var userToEdit = context.UserAccounts.Find(selectedUser.AccountId);
                    if (userToEdit != null)
                    {
                        userToEdit.Username = editUserWindow.Username;
                        userToEdit.PasswordHash = editUserWindow.Password; // Hash if needed
                        userToEdit.Role = editUserWindow.Role;
                        context.SaveChanges();
                    }
                }
                LoadUsers();
            }
        }

        private void DeleteUser_Click(object sender, RoutedEventArgs e)
        {
            var selectedUser = UserDataGrid.SelectedItem as UserAccount;
            if (selectedUser == null)
            {
                MessageBox.Show("Please select a user to delete.");
                return;
            }
            var result = MessageBox.Show($"Are you sure you want to delete {selectedUser.Username}?", "Confirm Delete", MessageBoxButton.YesNo);
            if (result == MessageBoxResult.Yes)
            {
                using (var context = new StudentHealthManagementContext())
                {
                    var userToDelete = context.UserAccounts.Find(selectedUser.AccountId);
                    if (userToDelete != null)
                    {
                        context.UserAccounts.Remove(userToDelete);
                        context.SaveChanges();
                    }
                }
                LoadUsers();
            }
        }
    }
}
